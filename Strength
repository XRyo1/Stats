local strengthEnabled = false
local battlespiritEnabled = false
local agilityEnabled = false

while true do
    if strengthEnabled then
        local strength = "Strength"
        local strlocate = game:GetService("Workspace").TrainingGrounds.EndPoints.Boulder.EndPart.CFrame
        local humanoid = game.Players.LocalPlayer.Character.HumanoidRootPart
        local args = {
            [1] = {
                ["Type"] = "End",
                ["Npc"] = workspace:WaitForChild("Npcs"):WaitForChild("Jin"),
                ["Path"] = strength
            }
        }
        humanoid.CFrame = strlocate
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Dialogue"):FireServer(unpack(args))
    end
    
    if battlespiritEnabled then
        local battlespirit = "Spar"
        local strlocate = game:GetService("Workspace").TrainingGrounds.EndPoints.Boulder.EndPart.CFrame
        local humanoid = game.Players.LocalPlayer.Character.HumanoidRootPart
        local args = {
            [1] = {
                ["Type"] = "End",
                ["Npc"] = workspace:WaitForChild("Npcs"):WaitForChild("Jin"),
                ["Path"] = battlespirit
            }
        }
        humanoid.CFrame = strlocate
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Dialogue"):FireServer(unpack(args))
    end
    
    if agilityEnabled then
        local agility = "Agility"
        local speedlocate = game:GetService("Workspace").TrainingGrounds.EndPoints.Agility.EndPart.CFrame
        local humanoid = game.Players.LocalPlayer.Character.HumanoidRootPart
        local args = {
            [1] = {
                ["Type"] = "End",
                ["Npc"] = workspace:WaitForChild("Npcs"):WaitForChild("Jin"),
                ["Path"] = agility
            }
        }
        humanoid.CFrame = speedlocate
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Dialogue"):FireServer(unpack(args))
    end
    
    wait(.1) -- Wait for 5 seconds before starting the next iteration
end
