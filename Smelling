local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local CollectionService = game:GetService("CollectionService");
local LocalPlayer = game.Players.LocalPlayer;
local LocalCharacter = LocalPlayer.Character;

local sniffEnabled = true;

workspace.Beams:ClearAllChildren();

function SetUpBeam(Character)
    if Character:FindFirstChild("Head") then
         if Character.Head:FindFirstChild("FaceCenterAttachment") then
              local SniffAttachment = ReplicatedStorage.Assets.Beams.Sniff:Clone();
              SniffAttachment.Attachment0 = LocalCharacter.Head.FaceCenterAttachment;
              SniffAttachment.Attachment1 = Character.Head.FaceCenterAttachment;
              SniffAttachment.Enabled = sniffEnabled;
              SniffAttachment.Name = Character.Name;    
              local ColorSeq = Color3.fromRGB(255, 255, 255);
              if CollectionService:HasTag(Character, "Demon") then
                   ColorSeq = Color3.fromRGB(171, 17, 17);
              elseif CollectionService:HasTag(Character, "Slayer") then
                   ColorSeq = Color3.fromRGB(7, 43, 161);
              end;
              SniffAttachment.Color = ColorSequence.new(ColorSeq, ColorSeq);
              SniffAttachment.Parent = workspace.Beams;
         end;
    end;
end;

for i, v in pairs(workspace.Live:GetChildren()) do
    if v ~= LocalCharacter then
         SetUpBeam(v);
    end;
end

SmellCon = workspace.Live.ChildAdded:Connect(function(char)
    task.wait(0.5);
    if char:FindFirstChild("Humanoid") then
         if char ~= LocalCharacter then
              SetUpBeam(char);
         end;
    end;
end);

workspace.Live.ChildRemoved:Connect(function(char)
    if char ~= LocalCharacter and workspace.Beams:FindFirstChild(char.Name) then
         workspace.Beams[char.Name]:Destroy();
    end;
end);

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.L and #workspace.Beams:GetChildren() > 0 then
         sniffEnabled = not sniffEnabled;
         for i, v in pairs(workspace.Beams:GetChildren()) do
              v.Enabled = sniffEnabled;
         end;
    end;
end)
